@model IEnumerable<CarRentalSystem.Models.User>
@{
    ViewData["Title"] = "View Customers";
}

<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">

<style>
    body {
        background: linear-gradient(135deg, #eef2f7, #f9fbfc);
        font-family: 'Inter', sans-serif;
    }

    /* Sidebar */
    .glass-effect {
        backdrop-filter: blur(16px);
        background: rgba(17, 25, 40, 0.85);
        border-right: 1px solid rgba(255, 255, 255, 0.1);
    }

    .offcanvas-nav .nav-link {
        padding: 12px 16px;
        border-radius: 12px;
        transition: all 0.3s ease;
        font-weight: 500;
        color: #d1d5db;
    }

        .offcanvas-nav .nav-link:hover {
            background: rgba(255, 255, 255, 0.15);
            color: #fff;
            transform: translateX(6px);
        }

    /* Page Title */
    .page-header h2 {
        font-weight: 700;
        font-size: 2rem;
        background: linear-gradient(90deg, #0d6efd, #20c997);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    /* Carded Table */
    .table-card {
        background: #fff;
        border-radius: 18px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.06);
        padding: 20px;
        overflow: hidden;
        margin-top: 20px;
    }

    thead {
        background: linear-gradient(90deg, #0d6efd, #20c997);
        color: #fff;
        font-size: 14px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    tbody tr {
        transition: all 0.25s ease;
    }

        tbody tr:hover {
            background-color: #f8fbff;
            transform: scale(1.005);
            box-shadow: inset 0 0 10px rgba(13, 110, 253, 0.1);
        }

    /* Search + Filter */
    .toolbar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 10px;
    }

    .search-box {
        position: relative;
        flex: 1;
        max-width: 350px;
    }

        .search-box input {
            padding-left: 40px;
            border-radius: 12px;
        }

        .search-box i {
            position: absolute;
            top: 50%;
            left: 12px;
            transform: translateY(-50%);
            color: #6c757d;
        }

    .filter-select {
        border-radius: 12px;
        padding: 10px 14px;
        font-weight: 500;
    }

    /* Action buttons */
    .action-btn {
        border-radius: 25px !important;
        padding: 7px 15px;
        font-size: 13px;
        display: inline-flex;
        align-items: center;
        gap: 6px;
        transition: 0.2s;
    }

        .action-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        }

        .action-btn i {
            font-size: 15px;
        }

    /* Avatar Circle (optional) */
    .avatar {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        background: #0d6efd;
        color: #fff;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
    }
</style>


<!-- Sidebar Trigger -->
<div class="page-content-wrapper mb-4">
    <button class="btn glass-effect text-white sidebar-toggle" type="button" data-bs-toggle="offcanvas" data-bs-target="#adminSidebar" aria-controls="adminSidebar">
        <i class="bi bi-list"></i>
    </button>

    <!-- Sidebar -->
    <div class="offcanvas offcanvas-start glass-effect text-white" tabindex="-1" id="adminSidebar" aria-labelledby="adminSidebarLabel" style="width: 280px;">
        <div class="offcanvas-header border-bottom border-secondary justify-content-center">
            <h4 class="offcanvas-title" id="adminSidebarLabel">Admin Menu</h4>
            <button type="button" class="btn-close btn-close-white position-absolute end-0 me-3" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">
            <div class="nav flex-column offcanvas-nav">
                <a href="@Url.Action("Index", "Cars")" class="nav-link"><i class="bi bi-car-front-fill me-2"></i> Manage Cars</a>
                <a href="@Url.Action("Index", "Bookings")" class="nav-link"><i class="bi bi-journal-text me-2"></i> Bookings</a>
                <a href="@Url.Action("ViewCustomers", "Admin")" class="nav-link"><i class="bi bi-people-fill me-2"></i> Customers</a>
                <a href="@Url.Action("ManageContactInfo", "Admin")" class="nav-link"><i class="bi bi-info-circle-fill me-2"></i> Site Info</a>
                <a href="@Url.Action("Dashboard", "Admin")" class="nav-link"><i class="bi bi-speedometer2 me-2"></i> Dashboard</a>
            </div>
        </div>
    </div>
</div>

<!-- Page Header -->
<div class="text-center page-header">
    <h2>Customer Management</h2>
    <p class="text-muted">Search, filter and manage customers</p>
</div>

<!-- Toolbar -->
<div class="toolbar">
    <div class="search-box">
        <i class="bi bi-search"></i>
        <input type="text" id="searchInput" class="form-control" placeholder="Search customers...">
    </div>
    <select id="statusFilter" class="form-select filter-select">
        <option value="">All</option>
        <option value="active">Active Only</option>
        <option value="inactive">Inactive Only</option>
    </select>
</div>

<!-- Customer Table -->
<div class="table-card">
    <table class="table table-hover align-middle" id="customerTable">
        <thead>
            <tr>
                <th>Avatar</th>
                <th>Full Name</th>
                <th>Email</th>
                <th>Status</th>
                <th class="text-center">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model)
            {
                var initials = user.FullName.Length >= 2 ? user.FullName.Substring(0, 2).ToUpper() : user.FullName.Substring(0, 1).ToUpper();
                <tr data-status="@(user.IsActive ? "active" : "inactive")">
                    <td><div class="avatar">@initials</div></td>
                    <td>@user.FullName</td>
                    <td>@user.Email</td>
                    <td>
                        @if (user.IsActive)
                        {
                            <span class="badge bg-success px-3 py-2">Active</span>
                        }
                        else
                        {
                            <span class="badge bg-danger px-3 py-2">Inactive</span>
                        }
                    </td>
                    <td class="text-center">
                        <div class="btn-group" role="group">
                            <a class="btn btn-sm btn-outline-secondary action-btn" asp-action="CustomerDetails" asp-route-id="@user.UserID">
                                <i class="bi bi-person-badge"></i> Details
                            </a>
                            <a class="btn btn-sm btn-outline-primary action-btn" asp-action="SendNotification" asp-route-id="@user.UserID">
                                <i class="bi bi-bell"></i> Notify
                            </a>
                            <form asp-action="ToggleUserStatus" asp-route-id="@user.UserID" method="post" class="d-inline">
                                <button type="submit" class="btn btn-sm @(user.IsActive ? "btn-outline-warning" : "btn-outline-success") action-btn">
                                    <i class="bi @(user.IsActive ? "bi-person-x" : "bi-person-check")"></i>
                                    @(user.IsActive ? "Deactivate" : "Activate")
                                </button>
                            </form>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    // Live search + filter
    const searchInput = document.getElementById("searchInput");
    const statusFilter = document.getElementById("statusFilter");
    const rows = document.querySelectorAll("#customerTable tbody tr");

    function filterTable() {
        const searchValue = searchInput.value.toLowerCase();
        const filterValue = statusFilter.value;

        rows.forEach(row => {
            const name = row.cells[1].innerText.toLowerCase();
            const email = row.cells[2].innerText.toLowerCase();
            const status = row.getAttribute("data-status");

            const matchesSearch = name.includes(searchValue) || email.includes(searchValue);
            const matchesFilter = !filterValue || filterValue === status;

            row.style.display = (matchesSearch && matchesFilter) ? "" : "none";
        });
    }

    searchInput.addEventListener("keyup", filterTable);
    statusFilter.addEventListener("change", filterTable);
</script>
